#Japanese text
# 中二病な日本語python案

"""
a = 'a'
if True:
    print("Hello, World")
elif {"a": False, 'c': True}[a]:
    with open("temp/temp.text") as f:
        f.read()
else:
    i = 0
    while True:
        i += 1
        if i> 10:
            break
    for j in range(10):
        print(j)
        
を

『名も無き』は　名も無き　に憑依す
覗く眼光　が理をなす世界線で
　　（『地獄に落ちろ、現世（うつしよ）よ』）との叫び
｛『名も無き』は　微笑む仮面、「隠者」は　覗く眼光｝から　名も無きで　召喚されし者　が理をなす分水嶺で
　　（『かりそめの/かりそめの.聖句』）からの蘇り　の深淵は　魔導書　と名状し
　　　　魔導書　の業の（）の権化
魔鏡のみが語る平行線で
　　1　は　異形　に憑依す
　　覗く眼光　の見張る無限地獄で
　　　　1　は　異形　の贄となる
　　　　異形　への　10　の服従　が理をなす世界線で
　　　　　　閻魔は絶命す
　　（10）の戒律　に記されし　沙汰　の地獄で
　　　　（沙汰）との叫び

としたら面白そう。

関数実行後の返り値を扱うこともあるので関数名の品詞は名詞にした。
代入文？は返り値なしが普通だから品詞を動詞にすることで while i=1とかの間違いを日本語文法的に防ぐ。
記号はだいたいそのまま

キーワード・予約語など
if a -> a　が理をなす世界線で
elif a -> a　が理をなす分水嶺で
else -> 魔鏡のみが語る平行線で
while a -> a　の見張る無限地獄で
for i in a -> a　の戒律に記されし　i　の地獄で
break -> 閻魔は絶命す
with a as b -> a　の深淵は　b　と名状し
True -> 覗く眼光
False -> 微笑む仮面

記号
"" -> 『』
'' -> 「」
a.b -> a　の業の　b
a[b] -> a　から　b　で召喚されし者
, -> 、

関数実行
a() -> （）a

python コードとの相互変換実現しないかなあ
"""
